<?php
/**
 * Resolve overwriting chunks
 *
 * @var xPDOObject $object
 * @var array $options
 */

$ignoreMain =
"# cache directories
Thumbs.db
*.DS_Store
*.empty

#phpstorm project files
.idea

#netbeans project files
nbproject

#eclipse, zend studio, aptana or other eclipse like project files
.buildpath
.project
.settings

# sass cache files
*.sass-cache


config.core.php
/core/config/config.inc.php
/connectors/config.core.php
/manager/config.core.php
/managersite/config.core.php
/core/cache/*
/assets/basetheme-design/min/*
/assets/components/gallery/cache/*
/assets/components/phpthumbof/cache/*
/assets/uploads/*
/assets/images/*

!.gitignore
";

$ignoreOther = "";

if ($object->xpdo) {
	/* @var modX $modx */
	$modx =& $object->xpdo;

	switch ($options[xPDOTransport::PACKAGE_ACTION]) {
		case xPDOTransport::ACTION_INSTALL:
		case xPDOTransport::ACTION_UPGRADE:
            if(!file_exists(MODX_BASE_PATH.'.gitignore')) {
                file_put_contents(MODX_BASE_PATH.'.gitignore', $ignoreMain);
            } else {
                rename(MODX_BASE_PATH.'.gitignore', MODX_BASE_PATH.'.gitignore-old');
                file_put_contents(MODX_BASE_PATH.'.gitignore', $ignoreMain);
            }

            /**
             * basetheme-design/min/
             */
            if(!file_exists(MODX_ASSETS_PATH.'basetheme-design/min/.gitignore')) {
                file_put_contents(MODX_ASSETS_PATH.'basetheme-design/min/.gitignore', $ignoreOther);
            } else {
                rename(MODX_ASSETS_PATH.'basetheme-design/min/.gitignore', MODX_ASSETS_PATH.'basetheme-design/min/.gitignore-old');
                file_put_contents(MODX_ASSETS_PATH.'basetheme-design/min/.gitignore', $ignoreOther);
            }

            /**
             * components/phpthumbof/cache/
             */
            if(!file_exists(MODX_ASSETS_PATH.'components/phpthumbof/cache/.gitignore')) {
                file_put_contents(MODX_ASSETS_PATH.'components/phpthumbof/cache/.gitignore', $ignoreOther);
            } else {
                rename(MODX_ASSETS_PATH.'components/phpthumbof/cache/.gitignore', MODX_ASSETS_PATH.'components/phpthumbof/cache/.gitignore-old');
                file_put_contents(MODX_ASSETS_PATH.'components/phpthumbof/cache/.gitignore', $ignoreOther);
            }

            /**
             * core/cache/
             */
            if(!file_exists(MODX_CORE_PATH.'cache/.gitignore')) {
                file_put_contents(MODX_CORE_PATH.'cache/.gitignore', $ignoreOther);
            } else {
                rename(MODX_CORE_PATH.'cache/.gitignore', MODX_CORE_PATH.'cache/.gitignore-old');
                file_put_contents(MODX_CORE_PATH.'cache/.gitignore', $ignoreOther);
            }

            /**
             * uploads/
             */
            if(!file_exists(MODX_ASSETS_PATH.'uploads/.gitignore')) {
                file_put_contents(MODX_ASSETS_PATH.'uploads/.gitignore', $ignoreOther);
            } else {
                rename(MODX_ASSETS_PATH.'uploads/.gitignore', MODX_ASSETS_PATH.'uploads/.gitignore-old');
                file_put_contents(MODX_ASSETS_PATH.'uploads/.gitignore', $ignoreOther);
            }

            /**
             * images/
             */
            if(!file_exists(MODX_ASSETS_PATH.'images/.gitignore')) {
                file_put_contents(MODX_ASSETS_PATH.'images/.gitignore', $ignoreOther);
            } else {
                rename(MODX_ASSETS_PATH.'images/.gitignore', MODX_ASSETS_PATH.'images/.gitignore-old');
                file_put_contents(MODX_ASSETS_PATH.'images/.gitignore', $ignoreOther);
            }
        break;

		case xPDOTransport::ACTION_UNINSTALL:
        break;
	}
}
return true;